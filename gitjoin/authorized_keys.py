import tools
import os
import StringIO

from gitjoin import models

def create():
    out = StringIO.StringIO()
    
    custom = open(os.path.expanduser('~/authorized_keys.custom')).read()
    out.write('# ~/authorized_keys.custom\n')
    out.write(custom)
    out.write('\n# autogenerated\n')
    
    auth_cmd = 'python -m gitjoin.git_auth'
    
    for key in models.SSHKey.objects.all():
        keydata = tools.reformat_ssh_key(key.data)
        username = ('user:%s' % key.owner.name) if key.owner else ('repo:%d' % key.target.id)
        
        out.write('command="%s %s",no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty %s\n' % (auth_cmd, username, keydata))
    
    tools.overwrite_file(os.path.expanduser('~/.ssh/authorized_keys'), out.getvalue())

if __name__ == '__main__':
    create()